name: Update Data
on:
  push:
    branches:
      - master
  schedule:
    - cron:  '* 12 * * *'

jobs:
  Update-Data:
# TODO: uncomment this
#    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:

    - name: See event name
      run: |
        echo "title ${title}"
        echo "actor ${actor}"
        echo "event_name ${event_name}"
      env:
        title: ${{ github.event.issue.title }}
        actor: ${{ github.actor }}
        event_name: ${{ github.event_name }}

    - name: Copy Repository Contents
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        pip3 install matplotlib pandas numpy scipy seaborn papermill ipykernel jupyter folium plotly plotnine psutil pymc3 arviz xlrd altair altair_saver jinja2 selenium
        sudo chmod -R 777 .

    - name: Update data
      id: update_data
      run: |
        cd ./realtime-rt/ && python3 main.py

    - name: Save images & generated data
      run: |
        git status
        if git diff-index --quiet HEAD --; then
          echo No changes detected!
          exit 0
        else
          echo Changes detected!
        fi
        git add .
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git commit -m'[bot] refresh data'
        git push -f

    - name: Create an issue if data update failure occurs
      if: github.event_name == 'schedule' && steps.update_data.outputs.error_bool == 'true'
      uses: actions/github-script@0.6.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          var err = process.env.ERROR_STRING;
          var run_id = process.env.RUN_ID;
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "Error updating data",
            body: `These are the data that failed to update properly: \n${err}\n\n See run [${run_id}](https://github.com/github/covid19-dashboard/actions/runs/${run_id}) for more details.`
          })
      env:
        ERROR_STRING: ${{ steps.update_data.outputs.error_str }}
        RUN_ID: ${{ github.run_id }}

    - name: Comment on issue if failure in workflow
      if: failure() && github.event_name == 'issues'
      uses: actions/github-script@0.6.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          var run_id = process.env.RUN_ID;
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `An workflow error occurred in run [${run_id}](https://github.com/github/covid19-dashboard/actions/runs/${run_id}) when attempting to refresh data.`
          })
      env:
        RUN_ID: ${{ github.run_id	 }}

    - name: Comment on and close issue if successful
      if: github.event_name == 'issues' && steps.update_data.outputs.error_bool == 'false'
      uses: actions/github-script@0.6.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'All data updated successfully.'
          })
          github.issues.update({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'closed'
          })
